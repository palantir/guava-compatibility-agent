buildscript {
    repositories {
        mavenCentral() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
        gradlePluginPortal() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
    }

    dependencies {
        classpath 'com.palantir.baseline:gradle-baseline-java:5.69.0'
        classpath 'com.palantir.gradle.consistentversions:gradle-consistent-versions:2.13.0'
        classpath 'com.palantir.gradle.gitversion:gradle-git-version:3.0.0'
        classpath 'com.palantir.gradle.externalpublish:gradle-external-publish-plugin:1.12.0'
        classpath 'com.palantir.javaformat:gradle-palantir-java-format:2.38.0'
        classpath 'com.palantir.gradle.shadow-jar:gradle-shadow-jar:3.0.0'
    }
}

apply plugin: 'com.palantir.external-publish'
apply plugin: 'com.palantir.baseline'
apply plugin: 'com.palantir.git-version'
apply plugin: 'com.palantir.consistent-versions'

version gitVersion()

allprojects {
    apply plugin: 'java-library'
    apply plugin: 'com.palantir.java-format'
    apply plugin: 'com.palantir.baseline-class-uniqueness'

    version rootProject.version
    group 'com.palantir.guava-compatibility-agent'

    repositories {
        mavenCentral() { metadataSources { mavenPom(); ignoreGradleMetadataRedirection() } }
    }

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'

    tasks.withType(JavaCompile) {
        options.compilerArgs += ['-Werror']
    }

    tasks.check.dependsOn javadoc, checkUnusedDependencies
}
